% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mpm-class.R
\name{mpm}
\alias{mpm}
\title{Construct an mpm (matrix population model) object}
\usage{
mpm(
  demog_info,
  matrix_type,
  census = "postbreeding",
  timestep = "year",
  class_type = character(),
  class_names = character(),
  newborn_classes = character()
)
}
\arguments{
\item{demog_info}{A list or data frame (or equivalent, e.g., a tibble)
containing information on the population structure and demography. See the
\strong{Details} section for more information.}

\item{matrix_type}{A character string specifying the model type. Must match
one of the values described in \strong{Details}}

\item{census}{The moment within the timestep at which the model "censuses"
the population. For non-seasonal birth-pulse models, allowable values are
"pre" (for a prebreeding-census model) or "post" (for a postbreeding-census
model). The choice affects structure of the matrix and the length of the
population vector, but does not affect the model's dynamics or asymptotic
properties (see \strong{Details}). Defaults to "post", which includes newborns
in the population vector.}

\item{timestep}{The timestep of the model; defaults to "year". Not currently
used for anything (other than being reported by \code{print}), but may become
useful with future implementations of seasonal and plotting methods.}

\item{class_type}{A conceptual descriptor of the classes that structure the
population (e.g., "age", "stage", or "size"). If not specified, then it is
taken from the name of the first element of \code{demog_info}.}

\item{class_names}{A character vector giving the names of the classes. If not
specified, then it is constructed by concatenating \code{class_type} with the
element of \code{demog_info} that lists class names of indices.}

\item{newborn_classes}{A character vector (often of length one) giving the
names of the classes that should be treated as newborn individuals. All
elements of this vector should also be in \code{class_names}. Defaults to the
first element of \code{class_names}.}
}
\value{
Ao object of class \code{mpm}, which is a list with the following slots:
\itemize{
\item \code{demog}: a list containing the demographic parameters extracted from \code{x}
\item \code{Apre} and \code{Apost}: the prebreeding- and postbreeding-census matrices.
These can be accessed easily using \code{Amat()}.
\item \code{Bmat}, \code{Pmat}, and \code{Gmat}: the birth, survival and transition ("growth")
matrices. Users do not normally need to access these; they are stored for
use by the analysis functions. - \code{class_names} and \code{newborn_classes}:
character vectors giving the names of all the classes and the newborn
classes, respectively.
}

It also has attributes \code{timestep}, \code{matrix_type}, \code{class_type}, and
\code{census}, which store the values provided in the corresponding input
parameters.

The \code{print} method gives a formatted report on the metadata as well as the
projection matrix associated with the value of \code{census}.
}
\description{
This function takes information about population structure, demography (e.g.,
birth and survival rates), and growth/maturation, and correctly does the
necessary accounting to create the projection matrix (or matrices) that
represent the biological information. For time-invariant models, the
projection matrix can be extracted and analyzed directly, although the
package has analysis tools that take advantage of the underlying demographic
information that is encoded in an \code{mpm} object. When more complex models are
implemented (e.g., with time-varying parameters or density-dependence), then
the \code{mpm} object will encode the information needed to simulate or analyze
the model.
}
\details{
The contents of \code{demog_infa} vary depending on which model type is requested.
It should be a list or data frame, with each element or column named. In all
models, a column or list element giving unique identifiers for each class is
required \emph{unless} both \code{class_type} and \code{class_names} are specified. The list
element or column containing the vector of class identifiers should either
have the same name as is given for \code{class_type} (e.g., "age") or be the first
element of \code{demog_info}.

Most (all?) models requirw that \code{denog_info} contain elements that specify
class-specific birth and survival rates. Below these are described as having
names "births" and "survival"; you may also use "mx" and "Px", respectively,
for consistency with life table notation.
\subsection{Model types}{

\describe{

\item{\code{matrix_type = "Leslie"}}{Creates a classic single-sex, age-structured
(Leslie) model. The only required elements of \code{demog_info} are \code{births} (a
vector of age-specific birth rates, including zero for newborns; equivalent
to \eqn{m_x} in a life table) and \code{survival} (a vector of age specific
survival rates, equivalent to \eqn{P_x} in a life table; if the last element
is non-zero, then the last age-class will include a self-loop).}

\item{\code{matrix_type = "Lefkovitch"}}{Creates a classic single-sex,
stage-structured (Lefkovitch) model, in which individuals in stage x, if the
survive, either stay in their stage (with probability 1 - g_x) or mature
to the next stage (with probability g_x). The only required elements
of \code{demog_info} are \code{births} (a vector of stage-specific birth rates,
including zero for newborns); \code{survival} (a vector of stage specific survival
rates); and \code{maturation} (a vector of stage-specific maturation rates; note that
the last stage should have a maturation rate of zero).}

}
}

\subsection{Census}{

The value of \code{census} gives the preferred census time for representing the
model itself as well as certain outcomes (e.g., which stages to include in
model projections). For birth-pulse model, the standard options are "post" (a
postbreeding-census model, which looks at the population immediately after
births have occurred, so that the youngest individuals are newborns) and
"pre" (a prebreeding-census model, which looks at the population immediately
before births occur, so that the youngest individuals are one timestep old).
The choice of a census time is important for visualization, but does not
affect the model's dynamic properties. In addition, the value of census that
is encoded in the \code{mpm} object can always be overridden in any function in
which it affects the output (e.g., projection of population vectors).
}
}
\examples{
# Leslie matrix model
bx <- c(0, 0.040, 1.470, 2.065, 2.440, 3.250, 3.250, 3.250) # Births
px <- c(0.424, 0.726, 0.513, 0.361, 0.175, 0.700, 0.286, 0) # Survival
my_lifetable <- data.frame(age = 0:7, mx = bx, Px = px)
mpm(my_lifetable, "Leslie") # default postbreeding-census model
mpm(my_lifetable, "Leslie", census = "pre") # prebreeding-census model
# Specify class names
cnames <- c("newborn", as.character(1:7))
mpm(my_lifetable, "Leslie", class_names = cnames)

# Make a Lefkovitch stage structured model
bx <- c(0, 0, 303)
px <- c(0.92 * 0.03 * 0.55, 0.36, 0.69)
gx <- c(1, 0.09/0.36, 0)
my_lt <- data.frame(births = bx, survival = px, maturation = gx)
mpm(my_lt, "Lefkovitch", class_type = "stage",
    class_names = c("eggs", "juveniles", "adults"))
}
